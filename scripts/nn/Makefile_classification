DATE := $(shell date +%Y%m%d)
DIR=../../processed_data/combined

# define genome splits
split:
	python define_genome_splits.py 0.75 4639675 \
	$(DIR)/tss_scramble_peak_expression_model_format.txt \
	$(DIR)/tss_scramble_peak_expression_model_format.txt \
	--classification --neg_threshold 0.75 --pos_threshold 1.25


# generate random sequences equal to training set to compute kmer frequency
# in random genomic sequence
random:
	bedtools random -l 150 -n 53326 -g ../../ref/U00096.2.chrom.sizes -seed 123 > \
	$(DIR)/genome_random_train_classification.bed
	bedtools getfasta -fi ../../ref/U00096.2.fasta -bed $(DIR)/genome_random_train_classification.bed \
	-fo $(DIR)/genome_random_train_classification.txt -name -tab -s 


# generate 3 to 6-mers and filter features based on frequency in random genomic sequence
kmer_filtered:
	python kmer_feature_generator.py \
	$(DIR)/tss_scramble_peak_expression_model_format_train_genome_split_classification.txt \
	$(DIR)/tss_scramble_peak_expression_model_format_test_genome_split_classification.txt \
	$(DIR)/tss_scramble_peak_expression_model_format_train_genome_split_classification_3to6mer_filtered.txt \
	$(DIR)/tss_scramble_peak_expression_model_format_test_genome_split_classification_3to6mer_filtered.txt \
	3 6 --random $(DIR)/genome_random_train_classification.txt


# run linear regression on filtered k-mers
logistic:
	python kmer_regression_models.py \
	$(DIR)/tss_scramble_peak_expression_model_format_train_genome_split_classification_3to6mer_filtered.txt \
	$(DIR)/tss_scramble_peak_expression_model_format_train_genome_split_classification_3to6mer_filtered.txt \
	$(DIR)/$(DATE)_kmer_logistic_predictions.txt linear --classification


# create 6-mer counts feature file for random forest
kmer: 
	@ Rscript create_kmer_counts.R \
	$(DIR)/tss_scramble_peak_expression_model_format_train_genome_split_classification.txt \
	$(DIR)/tss_scramble_peak_expression_model_format_train_genome_split_classification_kmer_counts.txt
	@ Rscript create_kmer_counts.R \
	$(DIR)/tss_scramble_peak_expression_model_format_test_genome_split_classification.txt \
	$(DIR)/tss_scramble_peak_expression_model_format_test_genome_split_classification_kmer_counts.txt


rf_kmer: 
	python random_forest.py \
	$(DIR)/tss_scramble_peak_expression_model_format_train_genome_split_classification_kmer_counts.txt \
	$(DIR)/tss_scramble_peak_expression_model_format_test_genome_split_classification_kmer_counts.txt \
	$(DIR)/$(DATE)_rf_tss_scramble_peak_classification_predictions.txt --classification


rf_onehot:
	python random_forest.py \
	$(DIR)/tss_scramble_peak_expression_model_format_train_genome_split_classification.txt \
	$(DIR)/tss_scramble_peak_expression_model_format_test_genome_split_classification.txt \
	$(DIR)/$(DATE)_rf_onehot_tss_scramble_peak_classification_predictions.txt \
	--onehot --seq_length 150 --classification


# k-mers are generated within script
mlp_6mer:
	# @ echo "$(DIR)/${DATE}_mlp_tss_scramble_peak_predictions.txt"
	python mlp_kmer.py \
	$(DIR)/tss_scramble_peak_expression_model_format_train_genome_split_classification.txt \
	$(DIR)/tss_scramble_peak_expression_model_format_test_genome_split_classification.txt \
	$(DIR)/$(DATE)_mlp_tss_scramble_peak_predictions_classification.txt 6 6 100 --classification


# run MLP for 3 to 6-mers
mlp_3to6:
	python mlp_kmer.py \
	$(DIR)/tss_scramble_peak_expression_model_format_train_genome_split_classification.txt \
	$(DIR)/tss_scramble_peak_expression_model_format_test_genome_split_classification.txt \
	$(DIR)/$(DATE)_mlp_3to6mer_tss_scramble_peak_predictions_classification.txt 3 6 100 --classification


# runs best on GPUs
nn: 
	python dragonn_hyperparameter_tuning.py \
	$(DIR)/tss_scramble_peak_expression_model_format_train_genome_split_classification.txt \
	$(DIR)/tss_scramble_peak_expression_model_format_test_genome_split_classification.txt \
	150 3 5 100 0.2 100 \
	$(DIR)/$(DATE)_tss_scramble_peak_classification_hyperparam_tuned > \
	$(DIR)/$(DATE)_tss_scramble_peak_classification_hyperparam_tuned.log


# genome split for only TSS library
split_tss:
	python define_genome_splits.py 0.75 4639675 \
	../../processed_data/endo_tss/lb/model_files/tss_expression_model_format.txt
	../../processed_data/endo_tss/lb/model_files/tss_expression_model_format.txt

gkmsvm: 
	Rscript ../endo_tss/run_gkmsvm_tss.R


print-%  : ; @echo $* = $($*)
